// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model Image {
  id          Int      @id @default(autoincrement())
  title       String
  description String?
  url         String
  createdAt   DateTime @default(now())
  updatedAt   DateTime @updatedAt
  item        Item     @relation(fields: [itemId], references: [id], onDelete: Cascade, onUpdate: Cascade)
  itemId      Int
}

model Item {
  id          Int      @id @default(autoincrement())
  name        String
  description String?
  price       Float
  image       String // main image
  images      Image[]
  createdAt   DateTime @default(now())
  updatedAt   DateTime @updatedAt
  users       User[]

  // Eav model
  attributes ItemAttributeValue[]

  // Variant model

  variants        ItemVariant[] @relation("ItemVariants")
  parentVariant   ItemVariant?  @relation("ParentVariants", fields: [parentVariantId], references: [id])
  parentVariantId Int?
}

model ItemVariant {
  id        Int      @id @default(autoincrement())
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt

  Item   Item?  @relation("ItemVariants", fields: [itemId], references: [id])
  itemId Int?
  // Item   Item[] @relation("ParentVariants")
  Items  Item[] @relation("ParentVariants")
}

model AttributeType {
  id          Int              @id @default(autoincrement())
  name        String // e.g., "brand", "size", "color"
  description String?
  slug        String           @unique // URL-friendly identifier
  filterable  Boolean          @default(true) // Should this be shown in filters?
  sortOrder   Int              @default(0) // Display order in filter UI
  required    Boolean          @default(false) // Is this attribute required?
  createdAt   DateTime         @default(now())
  updatedAt   DateTime         @updatedAt
  values      AttributeValue[]
}

model AttributeValue {
  id              Int                  @id @default(autoincrement())
  slug            String?              @unique // URL-friendly identifier
  value           String // e.g., "Olympus", "XL", "Red"
  displayName     String // Formatted name for display
  description     String?
  sortOrder       Int                  @default(0) // Display order in filter UI
  attributeType   AttributeType        @relation(fields: [attributeTypeId], references: [id])
  attributeTypeId Int
  createdAt       DateTime             @default(now())
  updatedAt       DateTime             @updatedAt
  items           ItemAttributeValue[]
}

model ItemAttributeValue {
  item             Item           @relation(fields: [itemId], references: [id])
  itemId           Int
  attributeValue   AttributeValue @relation(fields: [attributeValueId], references: [id])
  attributeValueId Int

  @@id([itemId, attributeValueId])
}

model User {
  id        String   @id @unique @default(uuid())
  email     String   @unique
  password  String
  name      String
  favorites Item[]
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
}

// MegaMenu
